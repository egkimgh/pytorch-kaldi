[cfg_proto]
cfg_proto = proto/global.proto
cfg_proto_chunk = proto/global_chunk.proto

[exp]
cmd = 
run_nn_script = run_nn
out_folder = exp/chime4_lstm_fmllr
seed = 2234
use_cuda = True
multi_gpu = True
save_gpumem = False
n_epochs_tr = 5

[dataset1]
data_name = tr05
fea: fea_name=fmllr
        fea_lst=/workspace/kaldi/egs/chime4/s5_2ch/fmllr/tr05_multi_noisy/feats.scp
        fea_opts=apply-cmvn --utt2spk=ark:/workspace/kaldi/egs/chime4/s5_2ch/fmllr/tr05_multi_noisy/utt2spk  ark:/workspace/kaldi/egs/chime4/s5_2ch/fmllr/tr05_multi_noisy/data/cmvn_speaker.ark ark:- ark:- | add-deltas --delta-order=0 ark:- ark:- |
	cw_left=0
	cw_right=0
	
lab: lab_name=lab_cd
        lab_folder=/workspace/kaldi/egs/chime4/s5_2ch/exp/tri3b_tr05_multi_noisy_ali_train
        lab_opts=ali-to-pdf
        lab_count_file=auto
        lab_data_folder=/workspace/kaldi/egs/chime4/s5_2ch/fmllr/tr05_multi_noisy
        lab_graph==/workspace/kaldi/egs/chime4/s5_2ch/exp/tri3b_tr05_multi_noisy/graph_tgpr_5k
	
n_chunks = 30

[dataset2]
data_name = dt05_real
fea: fea_name=fmllr
        fea_lst=/workspace/kaldi/egs/chime4/s5_2ch/fmllr/dt05_real_blstm_gev/feats.scp
        fea_opts=apply-cmvn --utt2spk=ark:/workspace/kaldi/egs/chime4/s5_2ch/fmllr/dt05_real_blstm_gev/utt2spk  ark:/workspace/kaldi/egs/chime4/s5_2ch/fmllr/dt05_real_blstm_gev/data/cmvn_speaker.ark ark:- ark:- | add-deltas --delta-order=0 ark:- ark:- |
	cw_left=0
	cw_right=0
	
lab: lab_name=lab_cd
        lab_folder=/workspace/kaldi/egs/chime4/s5_2ch/exp/tri3b_tr05_multi_noisy_ali_dev_real
        lab_opts=ali-to-pdf
        lab_count_file=auto
        lab_data_folder=/workspace/kaldi/egs/chime4/s5_2ch/fmllr/dt05_real_blstm_gev
        lab_graph=/workspace/kaldi/egs/chime4/s5_2ch/exp/tri3b_tr05_multi_noisy/graph_tgpr_5k
	
n_chunks = 4

[dataset3]
data_name = et05_real
fea: fea_name=fmllr
        fea_lst=/workspace/kaldi/egs/chime4/s5_2ch/fmllr/et05_real_blstm_gev/feats.scp
        fea_opts=apply-cmvn --utt2spk=ark:/workspace/kaldi/egs/chime4/s5_2ch/fmllr/et05_real_blstm_gev/utt2spk  ark:/workspace/kaldi/egs/chime4/s5_2ch/fmllr/et05_real_blstm_gev/data/cmvn_speaker.ark ark:- ark:- | add-deltas --delta-order=0 ark:- ark:- |
        cw_left=0
        cw_right=0

lab: lab_name=lab_cd
        lab_folder=/workspace/kaldi/egs/chime4/s5_2ch/exp/tri3b_tr05_multi_noisy_ali_test_real
        lab_opts=ali-to-pdf
        lab_count_file=auto
        lab_data_folder=/workspace/kaldi/egs/chime4/s5_2ch/fmllr/et05_real_blstm_gev
        lab_graph=/workspace/kaldi/egs/chime4/s5_2ch/exp/tri3b_tr05_multi_noisy/graph_tgpr_5k

n_chunks = 4

[data_use]
train_with = tr05
valid_with = dt05_real
forward_with = et05_real

[batches]
batch_size_train = 128
max_seq_length_train = 500
increase_seq_length_train = True
start_seq_len_train = 100
multply_factor_seq_len_train = 2
batch_size_valid = 8
max_seq_length_valid = 1000

[architecture1]
arch_name = LSTM_layers
arch_proto = proto/LSTM.proto
arch_library = neural_networks
arch_class = LSTM
arch_pretrain_file = none
arch_freeze = False
arch_seq_model = True
lstm_lay = 550,550,550,550
lstm_drop = 0.2,0.2,0.2,0.2
lstm_use_laynorm_inp = False
lstm_use_batchnorm_inp = False
lstm_use_laynorm = False,False,False,False
lstm_use_batchnorm = True,True,True,True
lstm_bidir = True
lstm_act = tanh,tanh,tanh,tanh
lstm_orthinit = True

arch_lr = 0.0016
arch_halving_factor = 0.5
arch_improvement_threshold = 0.001
arch_opt = rmsprop
opt_momentum = 0.0
opt_alpha = 0.95
opt_eps = 1e-8
opt_centered = False
opt_weight_decay = 0.0

[architecture2]
arch_name = MLP_layers
arch_proto = proto/MLP.proto
arch_library = neural_networks
arch_class = MLP
arch_pretrain_file = none
arch_freeze = False
arch_seq_model = False
dnn_lay = N_out_lab_cd
dnn_drop = 0.0
dnn_use_laynorm_inp = False
dnn_use_batchnorm_inp = False
dnn_use_batchnorm = False
dnn_use_laynorm = False
dnn_act = softmax

arch_lr = 0.0004
arch_halving_factor = 0.5
arch_improvement_threshold = 0.001
arch_opt = rmsprop
opt_momentum = 0.0
opt_alpha = 0.95
opt_eps = 1e-8
opt_centered = False
opt_weight_decay = 0.0

[model]
model_proto = proto/model.proto
model = out_dnn1=compute(LSTM_layers,fmllr)
	out_dnn2=compute(MLP_layers,out_dnn1)
	loss_final=cost_nll(out_dnn2,lab_cd)
	err_final=cost_err(out_dnn2,lab_cd)

[forward]
forward_out = out_dnn2
normalize_posteriors = True
normalize_with_counts_from = lab_cd
save_out_file = False
require_decoding = True

[decoding]
decoding_script_folder = kaldi_decoding_scripts/
decoding_script = decode_dnn.sh
decoding_proto = proto/decoding.proto
min_active = 200
max_active = 7000
max_mem = 50000000
beam = 20.0
latbeam = 12.0
acwt = 0.10
max_arcs = -1
skip_scoring = false
scoring_script = /workspace/kaldi/egs/chime4/s5_2ch/local/score.sh
scoring_opts = "--min-lmwt 5 --max-lmwt 17"
norm_vars = False

